{
  "swagger": "2.0",
  "info": {
    "description": "A simple api that teaches you how to use the techno-wallet service",
    "version": "1.0.0",
    "title": "TecnoWallet"
  },
  "host": "http://localhost:3333",
  "basePath": "/api",
  "schemes": ["https", "http"],
  "paths": {
    "/files": {
      "post": {
        "tags": ["Files"],
        "summary": "uploads an image",
        "description": "",
        "operationId": "uploadFile",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "description": "file to upload",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/File"
            }
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": ["User"],
        "summary": "Create new user",
        "description": "Create a new user registration",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User object that needs to be added to the service",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserResponse"
              }
            }
          },
          "422": {
            "description": "Validations errors",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ErrorObject"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["User"],
        "summary": "Update an existing user",
        "description": "",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "User object that needs to be update a existing user.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserResponse"
              }
            }
          },
          "422": {
            "description": "Validations errors",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ErrorObject"
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login in application",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Auth object that needs to be login in service.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Auth"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AuthResponse"
              }
            }
          },
          "422": {
            "description": "Validations errors",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ErrorObject"
              }
            }
          }
        }
      }
    },
    "/transactions": {
      "post": {
        "tags": ["Transactions"],
        "summary": "Transactions in application",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Transaction object that needs to be transaction in service.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TransactionResponse"
              }
            }
          },
          "422": {
            "description": "Validations errors",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ErrorObject"
              }
            }
          }
        }
      }
    },
    "/categories": {
      "post": {
        "tags": ["Categories"],
        "summary": "Categories in application",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Categories object that needs to be categories in service.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Categories"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CategoriesResponse"
              }
            }
          },
          "422": {
            "description": "Validations errors",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ErrorObject"
              }
            }
          }
        }
      }
    },
    "/resume": {
      "get": {
        "tags": ["Resume"],
        "summary": "Resume of transactions in application",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Resume of transaction object that needs to be transaction in service."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResumeResponse"
              }
            }
          },
          "422": {
            "description": "Validations errors",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ErrorObject"
              }
            }
          }
        }
      }
    }
  },

  "definitions": {
    "ErrorObject": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int64"
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "File": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        }
      }
    },
    "Transaction": {
      "type": "object",
      "properties": {
        "category_id": {
          "type": "integer",
          "format": "int64"
        },
        "description": {
          "type": "string"
        },
        "value": {
          "type": "number",
          "format": "double"
        },
        "type": {
          "type": "string"
        },
        "date": {
          "type": "string",
          "format": "YYYY-MM-DD HH:mm:ss"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "avatar_id": {
          "type": "integer"
        },
        "password": {
          "type": "string"
        },
        "confirm_password": {
          "type": "string"
        }
      }
    },
    "Categories": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        }
      }
    },
    "CategoriesResponse": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        }
      }
    },
    "ResumeResponse": {
      "type": "object",
      "properties": {
        "deposits": {
          "type": "number",
          "format": "double"
        },
        "value_of_payments": {
          "type": "number",
          "format": "double"
        },
        "total_balance": {
          "type": "number",
          "format": "double"
        },
        "movements_of_the_day": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "UserResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "avatar_id": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "TransactionResponse": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "format": "int64"
        },
        "value": {
          "type": "number",
          "format": "double"
        },
        "category_id": {
          "type": "integer",
          "format": "int64"
        },
        "type": {
          "type": "string"
        },
        "date": {
          "type": "string",
          "format": "YYYY-MM-DD HH:mm:ss"
        }
      }
    },
    "Auth": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "AuthResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/UserResponse"
        },
        "token": {
          "type": "string"
        }
      }
    }
  }
}
